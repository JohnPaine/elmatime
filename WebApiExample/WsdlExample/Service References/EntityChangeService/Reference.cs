//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WsdlExample.EntityChangeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
    [System.SerializableAttribute()]
    public partial class PublicServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WsdlExample.EntityChangeService.PublicServiceException InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WsdlExample.EntityChangeService.PublicServiceException InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Changes", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.API.Models")]
    [System.SerializableAttribute()]
    public partial class Changes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] UpdatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedField, value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Now {
            get {
                return this.NowField;
            }
            set {
                if ((this.NowField.Equals(value) != true)) {
                    this.NowField = value;
                    this.RaisePropertyChanged("Now");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedField, value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncChanges", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.API.Models")]
    [System.SerializableAttribute()]
    public partial class SyncChanges : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EQLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EQL {
            get {
                return this.EQLField;
            }
            set {
                if ((object.ReferenceEquals(this.EQLField, value) != true)) {
                    this.EQLField = value;
                    this.RaisePropertyChanged("EQL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Now {
            get {
                return this.NowField;
            }
            set {
                if ((this.NowField.Equals(value) != true)) {
                    this.NowField = value;
                    this.RaisePropertyChanged("Now");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUid {
            get {
                return this.TypeUidField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUidField, value) != true)) {
                    this.TypeUidField = value;
                    this.RaisePropertyChanged("TypeUid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.elma-bpm.ru/api/", ConfigurationName="EntityChangeService.IEntityChangesService")]
    public interface IEntityChangesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/IsSupported", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/IsSupportedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WsdlExample.EntityChangeService.PublicServiceException), Action="http://www.elma-bpm.ru/api//IsSupportedPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        bool IsSupported(string typeuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/IsSupported", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/IsSupportedResponse")]
        System.Threading.Tasks.Task<bool> IsSupportedAsync(string typeuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/Changes", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/ChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WsdlExample.EntityChangeService.PublicServiceException), Action="http://www.elma-bpm.ru/api//ChangesPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        WsdlExample.EntityChangeService.Changes Changes(string typeuid, System.DateTime fromServerTime, string eqlQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/Changes", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/ChangesResponse")]
        System.Threading.Tasks.Task<WsdlExample.EntityChangeService.Changes> ChangesAsync(string typeuid, System.DateTime fromServerTime, string eqlQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/ChangesCommit", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/ChangesCommitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WsdlExample.EntityChangeService.PublicServiceException), Action="http://www.elma-bpm.ru/api//ChangesCommitPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        bool ChangesCommit(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/ChangesCommit", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/ChangesCommitResponse")]
        System.Threading.Tasks.Task<bool> ChangesCommitAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/Sync", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/SyncResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WsdlExample.EntityChangeService.PublicServiceException), Action="http://www.elma-bpm.ru/api//SyncPublicServiceExceptionFault", Name="PublicServiceException", Namespace="http://schemas.datacontract.org/2004/07/EleWise.ELMA.Services.Public")]
        bool Sync(WsdlExample.EntityChangeService.SyncChanges changes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.elma-bpm.ru/api/IEntityChangesService/Sync", ReplyAction="http://www.elma-bpm.ru/api/IEntityChangesService/SyncResponse")]
        System.Threading.Tasks.Task<bool> SyncAsync(WsdlExample.EntityChangeService.SyncChanges changes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEntityChangesServiceChannel : WsdlExample.EntityChangeService.IEntityChangesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityChangesServiceClient : System.ServiceModel.ClientBase<WsdlExample.EntityChangeService.IEntityChangesService>, WsdlExample.EntityChangeService.IEntityChangesService {
        
        public EntityChangesServiceClient() {
        }
        
        public EntityChangesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EntityChangesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityChangesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityChangesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsSupported(string typeuid) {
            return base.Channel.IsSupported(typeuid);
        }
        
        public System.Threading.Tasks.Task<bool> IsSupportedAsync(string typeuid) {
            return base.Channel.IsSupportedAsync(typeuid);
        }
        
        public WsdlExample.EntityChangeService.Changes Changes(string typeuid, System.DateTime fromServerTime, string eqlQuery) {
            return base.Channel.Changes(typeuid, fromServerTime, eqlQuery);
        }
        
        public System.Threading.Tasks.Task<WsdlExample.EntityChangeService.Changes> ChangesAsync(string typeuid, System.DateTime fromServerTime, string eqlQuery) {
            return base.Channel.ChangesAsync(typeuid, fromServerTime, eqlQuery);
        }
        
        public bool ChangesCommit(System.Guid id) {
            return base.Channel.ChangesCommit(id);
        }
        
        public System.Threading.Tasks.Task<bool> ChangesCommitAsync(System.Guid id) {
            return base.Channel.ChangesCommitAsync(id);
        }
        
        public bool Sync(WsdlExample.EntityChangeService.SyncChanges changes) {
            return base.Channel.Sync(changes);
        }
        
        public System.Threading.Tasks.Task<bool> SyncAsync(WsdlExample.EntityChangeService.SyncChanges changes) {
            return base.Channel.SyncAsync(changes);
        }
    }
}
